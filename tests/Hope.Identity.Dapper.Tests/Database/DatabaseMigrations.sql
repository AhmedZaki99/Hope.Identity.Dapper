CREATE SCHEMA identity;

CREATE TABLE identity.users (
    id varchar(64) PRIMARY KEY,
    user_name varchar(128),
    normalized_user_name varchar(128),
    email varchar(128),
    normalized_email varchar(128),
    email_confirmed boolean NOT NULL DEFAULT FALSE,
    password_hash varchar(256),
    security_stamp varchar(256),
    concurrency_stamp varchar(256),
    phone_number varchar(128),
    phone_number_confirmed boolean NOT NULL DEFAULT FALSE,
    two_factor_enabled boolean NOT NULL DEFAULT FALSE,
    lockout_end timestamptz,
    lockout_enabled boolean NOT NULL DEFAULT FALSE,
    access_failed_count int NOT NULL DEFAULT 0
);

CREATE TABLE identity.roles (
    id varchar(64) PRIMARY KEY,
    name varchar(128),
    normalized_name varchar(128),
    concurrency_stamp varchar(256)
);

CREATE TABLE identity.user_roles (
    user_id varchar(64) NOT NULL REFERENCES identity.users (id),
    role_id varchar(64) NOT NULL REFERENCES identity.roles (id),
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE identity.user_claims (
    id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    user_id varchar(64) NOT NULL REFERENCES identity.users (id),
    claim_type varchar(128),
    claim_value varchar(512)
);

CREATE TABLE identity.role_claims (
    id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    role_id varchar(64) NOT NULL REFERENCES identity.roles (id),
    claim_type varchar(128),
    claim_value varchar(512)
);

CREATE TABLE identity.user_logins (
    login_provider varchar(128) NOT NULL,
    provider_key varchar(128) NOT NULL,
    provider_display_name varchar(128),
    user_id varchar(64) NOT NULL REFERENCES identity.users (id),
    PRIMARY KEY (login_provider, provider_key)
);

CREATE TABLE identity.user_tokens (
    login_provider varchar(128) NOT NULL,
    name varchar(128) NOT NULL,
    value varchar(512),
    user_id varchar(64) NOT NULL REFERENCES identity.users (id),
    PRIMARY KEY (login_provider, name)
);

CREATE UNIQUE INDEX idx_users_normalized_user_name ON identity.users (normalized_user_name) WHERE normalized_user_name IS NOT NULL;
CREATE UNIQUE INDEX idx_users_normalized_email ON identity.users (normalized_email) WHERE normalized_email IS NOT NULL;
CREATE INDEX idx_user_claims_user_id ON identity.user_claims (user_id);
CREATE INDEX idx_role_claims_role_id ON identity.role_claims (role_id);
